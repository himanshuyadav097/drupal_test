<?php
function gb_user_permission() {
	return array (
			'gb_user_per_add' => array (
					'title' => 'Create form gb_user According To choice',
					'description' => 'Form gb_user Creation' 
			),
			'gb_user_per_view' => array (
					'title' => 'View The List Of gb_user',
					'description' => 'View gb_user according to his powers' 
			) 
	);
}
function gb_user_menu() {
	$items ['admins/gb_user/add'] = array (
			'title' => 'Add New Gb User Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'gb_user_add' 
			),
			'access arguments' => array (
					0 => 'gb_user_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/gb_user/view'] = array (
			'title' => 'Gb User List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'gb_user_view' 
			),
			'access arguments' => array (
					0 => 'gb_user_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/gb_user/edit/%'] = array (
			'title' => 'Gb User Edit',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'gb_user_add',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'gb_user_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/gb_user/detail/%'] = array (
			'title' => 'Gb User detail',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'gb_user_detail',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'gb_user_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	return $items;
}
function gb_user_add($form, &$form_state, $rid = NULL) {
	
	if (! empty ( $rid )) {
		$data = get_data_by_pks ( 'gb_user', $rid );
		
		$form ['#submit'] [] = "gb_user_edit_submit";
		$form ['rid'] = array (
				'#type' => 'value',
				'#value' => $id 
		);
	}
	$form ['f_name'] = array (
			'#type' => 'textfield',
			'#title' => 'F_name',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->f_name ) ? $data->f_name : "" 
	);
	$form ['l_name'] = array (
			'#type' => 'textfield',
			'#title' => 'L_name',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->l_name ) ? $data->l_name : "" 
	);
	$form ['email'] = array (
			'#type' => 'textfield',
			'#title' => 'Email',
			'#size' => '254',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '254' 
			),
			'#default_value' => isset ( $data->email ) ? $data->email : "" 
	);
	$form ['password'] = array (
			'#type' => 'textfield',
			'#title' => 'Password',
			'#size' => '128',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '128' 
			),
			'#default_value' => isset ( $data->password ) ? $data->password : "" 
	);
	$form ['created'] = array (
			'#type' => 'textfield',
			'#title' => 'Created',
			'#size' => '10',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '10' 
			),
			'#default_value' => isset ( $data->created ) ? date ( "Y-m-d", $data->created ) : "" 
	);
	$form ['updated'] = array (
			'#type' => 'textfield',
			'#title' => 'Updated',
			'#size' => '10',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '10' 
			),
			'#default_value' => isset ( $data->updated ) ? date ( "Y-m-d", $data->updated ) : "" 
	);
	$form ['updatedby'] = array (
			'#type' => 'textfield',
			'#title' => 'Updatedby',
			'#size' => '10',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '10' 
			),
			'#default_value' => isset ( $data->updatedby ) ? $data->updatedby : "" 
	);
	$form ['createdby'] = array (
			'#type' => 'textfield',
			'#title' => 'Createdby',
			'#size' => '10',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '10' 
			),
			'#default_value' => isset ( $data->createdby ) ? $data->createdby : "" 
	);
	
	$form ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Save' 
	);
	return $form;
}
function gb_user_validate($form, &$form_state) {
}
function gb_user_add_submit($form, &$form_state) {
	global $user;
	$query = db_insert ( 'gb_user' )->fields ( array (
			'f_name' => $form_state ['values'] ['f_name'],
			'l_name' => $form_state ['values'] ['l_name'],
			'email' => $form_state ['values'] ['email'],
			'password' => $form_state ['values'] ['password'],
			'created' => strtotime ( $form_state ['values'] ['created'] ),
			'updated' => strtotime ( $form_state ['values'] ['updated'] ),
			'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'] 
	) )->execute ();
	if ($query > 0) {
		drupal_set_message ( 'gb_user added successfully' );
		drupal_goto ( 'admins/gb_user/view' );
	}
}
function gb_user_edit_submit($form, &$form_state) {
	global $user;
	$query = db_update ( 'gb_user' )->fields ( array (
			'f_name' => $form_state ['values'] ['f_name'],
			'l_name' => $form_state ['values'] ['l_name'],
			'email' => $form_state ['values'] ['email'],
			'password' => $form_state ['values'] ['password'],
			'created' => strtotime ( $form_state ['values'] ['created'] ),
			'updated' => strtotime ( $form_state ['values'] ['updated'] ),
			'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'] 
	) )->condition ( 'id', $form_state ['values'] ['id'], '=' )->execute ();
	if ($form_state ['values'] ['id'] > 0) {
		drupal_set_message ( 'gb_user update successfully' );
		drupal_goto ( 'admins/gb_user/view' );
	}
}
function gb_user_view($form, &$form_state) {
	
	
	/*$form['addmember'] = array(
			'#type' => 'markup',
			'#markup' => '<h5><a href="add">Add Member</h5>',
			//'#tree' => true,
	);
	*/
	drupal_add_js ( 'misc/form.js' ); // don't know if its really required to collapsible fieldsets to work
	drupal_add_js ( 'misc/collapse.js' );
	global $user;
	$default_rid = '';
	$default_f_name = '';
	$default_l_name = '';
	$default_email = '';
	
	if (! empty ( $_GET ['rid'] )) {
		$default_id = $_GET ['rid'];
	}
	if (! empty ( $_GET ['f_name'] )) {
		$default_f_name = $_GET ['f_name'];
	}
	
	if (! empty ( $_GET ['l_name'] )) {
		$default_l_name = $_GET ['l_name'];
	}
	
	if (! empty ( $_GET ['email'] )) {
		$default_email = $_GET ['email'];
	}
	
	$form ['search_form'] = array (
			'#title' => t ( 'Search and SortOrder' ),
			'#type' => 'fieldset',
			'#collapsible' => TRUE,
			'#collapsed' => TRUE,
			'#attached' => array (
					'library' => array (
							array (
									'system',
									'drupal.collapse' 
							) 
					) 
			) 
	);
	
	$form ['search_form'] ['rid'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'RID' ),
			'#size' => 30,
			'#default_value' => $default_rid 
	);
	$form ['search_form'] ['f_name'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'First name' ),
			'#size' => 30,
			'#default_value' => $default_f_name 
	);
	$form ['search_form'] ['l_name'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Last name' ),
			'#size' => 30,
			'#default_value' => $default_l_name 
	);
	$form ['search_form'] ['email'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Email' ),
			'#size' => 30,
			'#default_value' => $default_email 
	);
	

	
	$form ['search_form'] ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Submit' 
	);
	
	$query = db_select ( 'gb_user', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->orderBy ( 'tn.rid', 'asc' )->limit ( 20 );
	
	if (! empty ( $default_id )) {
		
		$query->condition ( 'tn.rid', $default_id, '=' );
	}
	if (! empty ( $default_f_name )) {
		$query->condition ( 'tn.f_name', $default_f_name, '=' );
	}
	if (! empty ( $default_l_name )) {
		
		$query->condition ( 'tn.l_name', $default_l_name, '=' );
	}
	if (! empty ( $default_email )) {
		
		$query->condition ( 'tn.email', $default_email, '=' );
	}
	
	$result = $query->execute ();
	
	$rows_articles = array ();
	foreach ( $result as $records ) {
		
		$created = util_date_format_short ( $records->created );
	//	$updated = util_date_format_short ( $records->updated );
		/*
		 * if($records->deleted){
		 * $deleted="Deleted";
		 * }
		 * else
		 * {
		 * //$deleted=l("<i class='icon-fixed-width icon-trash'></i>Delete",'admins/gb_user/edit/'.$records->,array('html'=>TRUE));
		 * }
		 */
		
		$rows_articles [] = array (
				$records->rid,
				$records->f_name,
				$records->l_name,
				$records->email,
				$records->password,
				//$records->created,
				date("Y-m-d",$records->created),
				
				$records->createdby 
		);
	}
	$headers = array (
			'Rid',
			'First Name',
			'Last Name',
			'Email',
			'Password',
			'Created',
			
			'Createdby' 
	);
	$all_articles = theme ( 'table', array (
			'header' => $headers,
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function gb_user_detail($form, &$form_state, $id = NULL) {
	global $user;
	$query = db_select ( 'gb_user', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->condition ( 'tn.id', $id, '=' )->orderBy ( 'tn.id', 'desc' );
	$result = $query->execute ()->fetchObject ();
	$rows_articles = array ();
	if (! empty ( $result ))
		foreach ( $result as $key => $value ) {
			
			$rows_articles [] = array (
					$key . ' :: ' . $value 
			);
		}
	
	$all_articles = theme ( 'table', array (
			'header' => array (),
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function util_date_format_short($date) {
	if ($date == 0 || $date == NULL) {
		return 0;
	} else {
		return format_date ( $date, 'custom', ' j M Y' );
	}
}
function gb_user_view_submit($form, &$form_state) {
	$rid = $form_state ['values'] ['rid'];
	$f_name = $form_state ['values'] ['f_name'];
	$l_name = $form_state ['values'] ['l_name'];
	$email = trim ( $form_state ['values'] ['email'] );
	
	if (! empty ( $rid )) {
		$param ["rid"] = $rid;
	}
	if (! empty ( $f_name )) {
		$param ["f_name"] = $f_name;
	}
	if (! empty ( $l_name )) {
		$param ["l_name"] = $l_name;
	}
	if (! empty ( $email )) {
		$param ["email"] = $email;
	}
	
	drupal_goto ( 'admins/gb_user/view', array (
			'query' => $param 
	) );
}
